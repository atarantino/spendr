package web

import (
	"fmt"
	sqlc "spendr/internal/database/sqlc"
)

templ WalletsPage(userID int, wallet *sqlc.Wallet, members []sqlc.GetWalletMembersByWalletIDRow, hasWallet bool) {
	@Base() {
		<div class="uk-container uk-container-expand">
			<div class="uk-flex uk-flex-between uk-flex-middle uk-margin-medium-bottom uk-padding-small uk-background-muted">
				<h2 class="uk-heading-small uk-margin-remove">Manage your wallet</h2>
				<a href="/dashboard" class="uk-button uk-button-default uk-button-small">
					Back to Dashboard
				</a>
			</div>

			if !hasWallet {
				@Card("Create your first wallet", "uk-card-default") {
					<p class="uk-text-small uk-margin-bottom">
						Wallets let you share expenses with others.
					</p>
					<form
						hx-post="/api/wallets"
						hx-swap="outerHTML"
						class="uk-form-stacked"
					>
						@FormInput("wallet-name", "name", "text", "Wallet name", true, "", "")
						<div class="uk-margin">
							@Button("Create wallet", "submit", "primary", "", "")
						</div>
					</form>
				}
			} else {
				<div class="uk-margin-large">
					@Card(wallet.Name, "uk-card-default") {
						<p class="uk-text-small uk-text-muted uk-margin-bottom">
							Created { wallet.CreatedAt.Time.Format("Jan 02, 2006") }
						</p>

						<div>
							<div class="uk-flex uk-flex-between uk-flex-middle uk-margin-bottom">
								<h4 class="uk-h4 uk-margin-remove">Members</h4>
								<span class="uk-badge">
									{ fmt.Sprintf("%d member", len(members)) }
									if len(members) != 1 {
										s
									}
								</span>
							</div>

							if len(members) == 0 {
								<div class="uk-alert-warning uk-text-center uk-text-small" uk-alert>
									<p>No members yet</p>
									<p class="uk-text-meta">Add members to start sharing expenses</p>
								</div>
							} else {
								<div class="uk-grid-small uk-child-width-1-1" uk-grid>
									for _, member := range members {
										<div>
											<div class="uk-card uk-card-default uk-card-body uk-card-small">
												<div class="uk-flex uk-flex-between uk-flex-middle">
													<div>
														<p class="uk-text-bold">{ member.Name }</p>
														<p class="uk-text-small uk-text-muted">{ member.Email }</p>
														<p class="uk-text-meta">
															Joined { member.JoinedAt.Time.Format("Jan 02, 2006") }
														</p>
													</div>
													if member.UserID != int32(userID) {
														<button
															hx-delete={ fmt.Sprintf("/api/wallets/%d/members/%d", wallet.ID, member.UserID) }
															hx-confirm="Are you sure you want to remove this member?"
															hx-swap="outerHTML"
															hx-target="closest div"
															class="uk-button uk-button-danger uk-button-small"
														>
															Remove
														</button>
													} else {
														<span class="uk-badge uk-badge-primary">
															You
														</span>
													}
												</div>
											</div>
										</div>
									}
								</div>
							}
						</div>
					}

					@Card("Add member", "uk-card-default uk-margin-top") {
						<p class="uk-text-small uk-margin-bottom">
							Invite others by email address. They must have an account.
						</p>
						<form
							hx-post={ fmt.Sprintf("/api/wallets/%d/members", wallet.ID) }
							hx-swap="outerHTML"
							class="uk-form-stacked"
						>
							@FormInput("member-email", "email", "email", "Email address", true, "", "")
							<div class="uk-margin">
								@Button("Add member", "submit", "primary", "", "")
							</div>
						</form>
					}
				</div>
			}
		</div>
	}
}
